use strum_macros::AsRefStr;

#[derive(AsRefStr)]
pub enum Node {
  Err,
  // Expr
  Argument,
  ArrayLiteralExpr,
  ArrowFunctionExpr,
  AwaitExpr,
  BigIntExpr,
  BinaryExpr,
  BooleanLiteralExpr,
  CallExpr,
  ClassExpr,
  ComputedPropertyNameExpr,
  ConditionExpr,
  DeleteExpr,
  ElementAccessExpr,
  FunctionExpr,
  Identifier,
  NewExpr,
  NullLiteralExpr,
  NumberLiteralExpr,
  ObjectLiteralExpr,
  OmittedExpr,
  ParenthesizedExpr,
  PostfixUnaryExpr,
  PrivateIdentifier,
  PromiseArrayExpr,
  PromiseExpr,
  PropAccessExpr,
  PropAssignExpr,
  ReferenceExpr,
  RegexExpr,
  SpreadAssignExpr,
  SpreadElementExpr,
  StringLiteralExpr,
  TaggedTemplateExpr,
  TemplateExpr,
  ThisExpr,
  TypeOfExpr,
  UnaryExpr,
  UndefinedLiteralExpr,
  VoidExpr,
  YieldExpr,
  // Stmt
  BlockStmt,
  BreakStmt,
  CaseClause,
  CatchClause,
  ContinueStmt,
  DebuggerStmt,
  DefaultClause,
  DoStmt,
  EmptyStmt,
  ExprStmt,
  ForInStmt,
  ForOfStmt,
  ForStmt,
  IfStmt,
  LabelledStmt,
  ReturnStmt,
  SwitchStmt,
  ThrowStmt,
  TryStmt,
  VariableDecl,
  VariableDeclList,
  VariableStmt,
  WhileStmt,
  WithStmt,
  // Decl
  ArrayBinding,
  BindingElem,
  ClassDecl,
  ClassStaticBlockDecl,
  ConstructorDecl,
  FunctionDecl,
  GetAccessorDecl,
  MethodDecl,
  ObjectBinding,
  ParameterDecl,
  PropDecl,
  SetAccessorDecl,
  // Keywords
  ImportKeyword,
  SuperKeyword,
}
